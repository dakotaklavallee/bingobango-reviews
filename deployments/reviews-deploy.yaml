AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Service & Target Group for BingoBango Reviews Subgraph

Parameters:
  ClusterName:
    Type: String
  Subnet1:
    Type: AWS::EC2::Subnet::Id
  Subnet2:
    Type: AWS::EC2::Subnet::Id
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
  VpcId:
    Type: AWS::EC2::VPC::Id
  ImageUrl:
    Type: String
  ExecutionRoleArn:
    Type: String
  ListenerArn:
    Type: String

Resources:
  ReviewsTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: reviews-target-group
      Port: 4002
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VpcId
      HealthCheckPath: /graphql
      HealthCheckProtocol: HTTP
      Matcher:
        HttpCode: 200

  ReviewsTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: bingo-reviews
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !Ref ExecutionRoleArn
      ContainerDefinitions:
        - Name: reviews-subgraph
          Image: !Ref ImageUrl
          PortMappings:
            - ContainerPort: 4002
          Environment:
            - Name: NODE_ENV
              Value: production
            - Name: PORT
              Value: "4002"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/bingobango-reviews
              awslogs-region: us-east-1
              awslogs-stream-prefix: ecs
          HealthCheck:
            Command: ["CMD-SHELL", "curl -f http://localhost:4002/graphql || exit 1"]
            Interval: 30
            Timeout: 10
            Retries: 5
            StartPeriod: 30

  ReviewsService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: bingo-reviews-service
      Cluster: !Ref ClusterName
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref ReviewsTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref Subnet1
            - !Ref Subnet2
          SecurityGroups:
            - !Ref SecurityGroupId
      LoadBalancers:
        - ContainerName: reviews-subgraph
          ContainerPort: 4002
          TargetGroupArn: !Ref ReviewsTargetGroup

  ReviewsListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref ListenerArn
      Priority: 20
      Conditions:
        - Field: path-pattern
          Values: [/reviews/*]
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ReviewsTargetGroup

Outputs:
  ServiceName:
    Value: !Ref ReviewsService
  TaskDefinitionArn:
    Value: !Ref ReviewsTaskDefinition
  TargetGroupArn:
    Value: !Ref ReviewsTargetGroup